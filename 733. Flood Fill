class Solution:
    def floodFill(self, image: List[List[int]], sr: int, sc: int, color: int) -> List[List[int]]:
        def dfs(visited, image, current,color,old_color):
            print(current)
            visited[current[0]][current[1]] = 1
            image[current[0]][current[1]]=color
            for i in [[current[0]-1,current[1]],[current[0]+1,current[1]],[current[0],current[1]+1],[current[0],current[1]-1]]:
                print("out",i,visited)
                if (i[0] >-1 and i[0] <len(image)) and (i[1] >-1 and i[1]< len(image[0])) and (not visited[i[0]][i[1]]) and (image[i[0]][i[1]] == old_color):
                    print("in",i,visited)
                    dfs(visited,image,[i[0],i[1]],color,old_color)
        

        visited=[[0 for _ in range(len(image[0]))] for _ in range(len(image))]
        old_color = image[sr][sc]
        if image[sr][sc] == color:
             return image
        dfs(visited=visited,image=image,current=[sr,sc],color=color,old_color=old_color)
        return image
    